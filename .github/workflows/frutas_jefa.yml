name: frutas_jefa.yml
on:
  push:
    branches: [ "main" ]
    pull_request:

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  build_and_test:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4

      - name: Correr pruebas
        run: |
          echo "Probando..."

  deploy:
    needs: build_and_test
    runs-on: ubuntu-latest
    if: ${{ success() }}
    steps:
      - uses: actions/checkout@v3
      - name: Install rsync
        run: |
          sudo apt-get update
          sudo apt-get install -y --reinstall rsync
      - name: Check path
        run: which rsync
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}
      - name: Debug rsync
        run: |
          which rsync || true
          ls -l /usr/bin/rsync || true
          /usr/bin/rsync --version || true
      - name: Copy to server
        run: |
          rsync -avz -e "ssh -o StrictHostKeyChecking=no" . \
              ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:${{ secrets.DEPLOY_PATH }}
      - name: Remote deploy (Docker build + healthcheck)
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} <<'REMOTE'
            set -Eeuo pipefail
            PROJECT_DIR="/var/www/frutas_ontologia/dp"
            IMAGE="ontology-dp/frutas:latest"
            STACK="frutas_frontend"
            PORT=8081
            HEALTH="http://127.0.0.1:${PORT}/"

            echo -e "\033[1;33m⏹  1) Stopping old ${STACK}…\033[0m"
            sudo docker compose -f "${PROJECT_DIR}/docker-compose.yml" stop ${STACK} || true

            echo -e "\033[1;34m🔨  2) Building image ${IMAGE}…\033[0m"
            sudo docker build -f "${PROJECT_DIR}/Dockerfile" "${PROJECT_DIR}" \
                 -t "${IMAGE}" --pull --no-cache

            echo -e "\033[1;32m🚀  3) Bringing container up…\033[0m"
            sudo docker compose -f "${PROJECT_DIR}/docker-compose.yml" up -d --build ${STACK}

            echo -e "\033[1;36m🩺  4) Health-check ${HEALTH}…\033[0m"
            for i in {1..10}; do curl -fsSL "$HEALTH" >/dev/null && break; sleep 2; done
            if ! curl -fsSL "$HEALTH" >/dev/null; then
              echo -e "\033[1;31mHealth-check failed, rolling back!\033[0m" >&2
              sudo docker compose -f "${PROJECT_DIR}/docker-compose.yml" stop ${STACK}
              exit 1
            fi

            echo -e "\033[1;35m🧹  5) Docker image prune…\033[0m"
            sudo docker image prune -f

            echo -e "\033[1;32m✅  Deploy SUCCESS\033[0m"
            sudo systemctl reload nginx
          REMOTE
